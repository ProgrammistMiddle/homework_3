import pandas as pd
import numpy as np
import random

print('task_1')
'''Используя соответствующую функцию библиотеки pandas, подгрузите датасет 'train.csv' из .csv файла. Выведите на экран первые 5 строчек файла (метод head)'''

file = pd.read_csv('train.csv')
print(file.head(5))

print('Задача 2')
'''
Для подгруженного датасета из предыдущей задачи:
* посчитайте сколько записей
* определите тип данных в каждом столбце
* проверьте, есть ли пропуски
* выведите на экран описательные статистики

P.S. используйте соответствующие встроенные методы'''

print('count(): ','\n',file.count())
print(file.info())
print(file.dtypes)
print(file.isnull().sum())
print()
print(file.describe())

print('Задача 3')
'''
Используя соответствующий встроенный метод, "дропните", т.е. удалите из нашей таблички все столбцы, у которых кол-во пропущенных значений больше 200.

* найдите все такие столбцы (метод .isna() + подвыборка с условием)
* определите их названия (поймите как выцепить названия и сохраните их в массив, т.е. по цепочке примените методы .index, .tolist() или .values)
* "дропните их" (используйте метод .drop(имена столбцов))
* результат сохраните в новой табличке (например, data_1), исходную менять не нужно'''


col = file.columns.tolist()
data_1= file
for i in range(file.shape[1]):
	if file.iloc[:,i].isna().sum()>200:
		print(col[i])
		data_1 = data_1.drop(col[i], axis=1)
print(data_1.shape)
	
print('Задача 4')
'''
В финальном датасете из прошлой задачи "дропните" все строки с пропусками в данных, используйте соответствующий встроенный метод (.dropna()). В этой задаче, в отличие от предыдущей, выполните операцию "inplace", т.е. измените исходную таблицу.'''

data_1.dropna(axis=0, how='any', inplace=True)
print(data_1.shape)


print('Задача 5')
'''
Данные, с которыми мы работаем в этом домашнем задании, содержат информацию о проданных домах. В табличке из прошлой задачи найдите все дома, проданные в 2007 году, у которых цена продажи выше 300000 и есть бассейн. Для подвыборки с указанными условиями сначала создайте маску.

* цена продажи SalePrice
* год продажи YrSold
* наличие бассейна можно определить по столбцу PoolArea'''

all_house = data_1[data_1['SalePrice']>300000 ]
all_house=all_house[data_1['YrSold'] ==2007]
all_house=all_house[data_1['PoolArea']>0]
print(all_house)

print('Задача 6')
'''
Добавьте к табличке data_1 новый столбец с названием 'Flag'. Присвойте ему значения 0 или 1 в случайном порядке. Для этого:
    
* создайте одномерный массив из случайных целых чисел 0 или 1
* размер массива должен соответствовать кол-ву наблюдений в основной табличке
* создайте новый столбец и присвойте ему значения одномерного массива
'''

value= pd.np.random.randint(0,2,(data_1.shape[0],))
index=data_1.index.tolist()

data_1['Flag']=''
for i in range(len(index)):	
	data_1['Flag'][index[i]]= value[i]
print(value)
print(data_1.shape)
print(data_1)

